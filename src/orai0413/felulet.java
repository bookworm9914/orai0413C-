/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package orai0413;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Banyek
 */
public class felulet extends javax.swing.JFrame {

    /**
     * Creates new form felulet
     */
    public felulet() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Szakok = new javax.swing.JComboBox<>();
        ker = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Beolvas = new javax.swing.JMenuItem();
        Mentes = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Szakok.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Szak választása", "Szoftverfejlesztő", "Rendszergazda", "Gazdaságinformatikus" }));
        Szakok.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                SzakokComponentAdded(evt);
            }
        });
        Szakok.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SzakokItemStateChanged(evt);
            }
        });
        Szakok.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                SzakokPropertyChange(evt);
            }
        });

        ker.setText("Hírlevél kérése");

        jMenu1.setText("Fájl");
        jMenu1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jMenu1ItemStateChanged(evt);
            }
        });

        Beolvas.setText("Beolvas");
        jMenu1.add(Beolvas);

        Mentes.setText("Mentés");
        Mentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MentesActionPerformed(evt);
            }
        });
        jMenu1.add(Mentes);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(Szakok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(ker)
                .addContainerGap(101, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ker)
                    .addComponent(Szakok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SzakokItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SzakokItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_SzakokItemStateChanged

    private void SzakokComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_SzakokComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_SzakokComponentAdded

    private void jMenu1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jMenu1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ItemStateChanged

    private void SzakokPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_SzakokPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_SzakokPropertyChange

    private void MentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MentesActionPerformed
        try {
            Mentes();
        } catch (IOException ex) {
            Logger.getLogger(felulet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MentesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(felulet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(felulet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(felulet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(felulet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new felulet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Beolvas;
    private javax.swing.JMenuItem Mentes;
    private javax.swing.JComboBox<String> Szakok;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JCheckBox ker;
    // End of variables declaration//GEN-END:variables

    private void Mentes() throws IOException {
        if (!(Szakok.getSelectedItem().equals("Szak választása"))) {
            StringBuilder sb = new StringBuilder();
            sb.append("Szak: " + Szakok.getSelectedItem());
            boolean kere = ker.isSelected();

            if (kere == true) {
                sb.append("\nHírlevél: " + "igen\n");
            } else {
                sb.append("\nHírlevél: " + "nem\n");
            }
        
        Files.write(Paths.get("Adatok.txt"), sb.toString().getBytes());}
    }
}
